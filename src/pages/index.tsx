import { SignIn, SignOutButton, useUser } from "@clerk/nextjs";
import { type GetServerSideProps, type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import dayjs from "../../lib/dayjs";

const NEXT_PUBLIC_URL = process.env.NEXT_PUBLIC_URL || "";

type Props = {
    feed: Post[];
};

const Post = (props: Post) => {
    const { post, author } = props;
    return (
        <div className="flex items-center gap-3 border-b border-slate-800 p-4">
            <Image
                src={author.profileImageUrl}
                alt="profile"
                height={50}
                width={50}
                className="rounded-full"
            />
            <div className="flex flex-col">
                <p>
                    <span className="font-bold">{`${author.firstName} ${author.lastName}`}</span>{" "}
                    Â· {`${dayjs(post.createdAt).fromNow()} `}
                </p>
                <p>{post.content}</p>
            </div>
        </div>
    );
};

const Feed = ({ feed }: Props) => {
    return (
        <div className="border-x border-slate-800">
            {feed.map((post) => (
                <Post key={post.post.id} {...post} />
            ))}
        </div>
    );
};

const Home: NextPage<Props> = ({ feed }) => {
    const user = useUser();

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-blue-800 to-blue-950">
                <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
                    {!user.isSignedIn ? (
                        <>
                            <div className="text-center">
                                <h1 className="text-4xl font-bold text-[#19191A]">
                                    Welcome to
                                </h1>
                                <h1 className=" text-8xl font-extrabold text-white">
                                    SNET
                                </h1>
                            </div>
                            <SignIn />
                        </>
                    ) : (
                        <>
                            <Feed feed={feed} />
                            <SignOutButton />
                        </>
                    )}
                </div>
            </main>
        </>
    );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async () => {
    let feed: Post[] = [];

    try {
        await fetch(`${NEXT_PUBLIC_URL}/api/posts`)
            .then((res) => res.json())
            .then((json: Post[]) => {
                feed = json;
            });
    } catch (error) {
        console.error(error);
    }

    return {
        props: { feed },
    };
};
